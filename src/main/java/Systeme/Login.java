/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Systeme;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.*;
import java.sql.*;
import java.io.File;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Arrays;
import java.util.Base64;

/**
 *
 * @author MOUSSA SEOGO
 */
public class Login extends javax.swing.JFrame {
    Connection con;
    PreparedStatement pst;
    ResultSet rs;

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }
    public void Connect() {
        try {
            // Chemin absolu garanti
            String dbPath = "C:/Users/MOUSSA SEOGO/Documents/NetBeansProjects/GestionHotel/src/main/java/Systeme/hotel.db";
        
            // Vérification que le fichier existe
            if (!new File(dbPath).exists()) {
                 JOptionPane.showMessageDialog(this, 
                    "Fichier de base de données introuvable à:\n" + dbPath, 
                    "Erreur Critique", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
            // Connexion avec vérification
            Class.forName("org.sqlite.JDBC");
            this.con = DriverManager.getConnection("jdbc:sqlite:" + dbPath);
        
            // Test de connexion
            Statement testStmt = con.createStatement();
            testStmt.execute("SELECT 1");
            testStmt.close();
        
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(this, 
                "Driver SQLite manquant. Ajoutez sqlite-jdbc.jar à votre classpath.",
                "Erreur Configuration", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, 
                "Échec de connexion à la base de données:\n" + e.getMessage(),
                "Erreur DB", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblfermer = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtnom = new javax.swing.JTextField();
        txtmdp = new javax.swing.JPasswordField();
        btnconnecter = new javax.swing.JButton();
        cbStatut = new javax.swing.JComboBox<>();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(0, 102, 102));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SMDEV HOTEL");

        lblfermer.setBackground(new java.awt.Color(153, 0, 0));
        lblfermer.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblfermer.setForeground(new java.awt.Color(255, 51, 0));
        lblfermer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblfermer.setText("X");
        lblfermer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblfermerMouseClicked(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\MOUSSA SEOGO\\Pictures\\Camera Roll\\contacts-google (1).png")); // NOI18N

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\MOUSSA SEOGO\\Pictures\\Camera Roll\\contact (3).png")); // NOI18N

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon("C:\\Users\\MOUSSA SEOGO\\Pictures\\Camera Roll\\cadenas.png")); // NOI18N

        txtnom.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtmdp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnconnecter.setBackground(new java.awt.Color(0, 102, 102));
        btnconnecter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnconnecter.setText("SE CONNECTER");
        btnconnecter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconnecterActionPerformed(evt);
            }
        });

        cbStatut.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbStatut.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ADMIN", "user" }));
        cbStatut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStatutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel4))
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnconnecter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtmdp)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtnom, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbStatut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblfermer, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblfermer)
                .addGap(14, 14, 14)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtnom, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cbStatut, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtmdp, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnconnecter, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblfermerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblfermerMouseClicked
        //permet de fermer la fenete
        System.exit(0);
    }//GEN-LAST:event_lblfermerMouseClicked

    private void btnconnecterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconnecterActionPerformed
                                           
        try {
            // 1. Établir la connexion (utilisez votre méthode Connect() existante)
            Connect(); // Cette méthode doit initialiser la variable 'con'
        
            // 2. Vérifier que la connexion est établie
            if (con == null) {
                JOptionPane.showMessageDialog(this, 
                   "Erreur de connexion à la base de données", 
                   "Erreur", 
                   JOptionPane.ERROR_MESSAGE);
                return;
            }
        
            // 3. Préparation de la requête avec paramètres
            pst = con.prepareStatement("SELECT * FROM connecter WHERE nom=? AND mdp=? AND type=?");
        
            // 4. Paramétrage sécurisé
           String username = txtnom.getText().trim();
           String password = new String(txtmdp.getPassword());
           String role = cbStatut.getSelectedItem().toString();
        
           pst.setString(1, username);
           pst.setString(2, password); // Si vous utilisez le hachage, remplacez par hashPassword(password)
           pst.setString(3, role);
        
           // 5. Exécution
            rs = pst.executeQuery();

            // 6. Traitement du résultat
            if(rs.next()) {
                JOptionPane.showMessageDialog(null, "Connexion réussie!");
            
                // Fermer la fenêtre de login
                 this.dispose();
            
                // Ouvrir le menu principal
                new MenuePrincipale().setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, 
                   "Nom d'utilisateur, mot de passe ou type incorrect",
                   "Échec de connexion", 
                   JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, 
                "Erreur de base de données: " + e.getMessage(), 
                "Erreur", 
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } finally {
            // 7. Fermeture sécurisée des ressources
            try { if (rs != null) rs.close(); } catch (SQLException e) { /* Ignorer */ }
            try { if (pst != null) pst.close(); } catch (SQLException e) { /* Ignorer */ }
            try { if (con != null) con.close(); } catch (SQLException e) { /* Ignorer */ }
        
            // Nettoyage sécurisé du mot de passe en mémoire
            if (txtmdp != null) {
                char[] password = txtmdp.getPassword();
                java.util.Arrays.fill(password, '\0');
                txtmdp.setText("");
            }
        }
    }

    // Méthode de hachage (à ajouter à votre classe)
    private String hashPassword(String plainPassword) {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            byte[] hashedBytes = md.digest(plainPassword.getBytes(StandardCharsets.UTF_8));
            return Base64.getEncoder().encodeToString(hashedBytes);
        } catch (NoSuchAlgorithmException e) {
            JOptionPane.showMessageDialog(this, 
                "Erreur de hachage du mot de passe", 
                "Erreur Système", 
                JOptionPane.ERROR_MESSAGE);
            throw new RuntimeException("Algorithme de hachage non disponible", e);
        }
    }//GEN-LAST:event_btnconnecterActionPerformed

    private void cbStatutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStatutActionPerformed
        String selectedRole = (String) cbStatut.getSelectedItem();
    
        if (selectedRole != null) {
            boolean isAdmin = "ADMIN".equals(selectedRole);
        
            // Exemple: Modifier l'interface selon le rôle
            jLabel1.setForeground(isAdmin ? java.awt.Color.RED : java.awt.Color.BLUE);
            btnconnecter.setText(isAdmin ? "CONNEXION ADMIN" : "Connexion utilisateur");
        }
    }//GEN-LAST:event_cbStatutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnconnecter;
    private javax.swing.JComboBox<String> cbStatut;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblfermer;
    private javax.swing.JPasswordField txtmdp;
    private javax.swing.JTextField txtnom;
    // End of variables declaration//GEN-END:variables
}
